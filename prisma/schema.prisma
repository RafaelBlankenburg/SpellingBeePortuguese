// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String       @id @default(uuid())
  createdAt DateTime     @default(now())

  userScores UserScore[]
  userWords  UserWord[]
}

model Challenge {
  id              String    @id @default(uuid())
  date            DateTime  @default(now())
  centerLetter    String    
  letters         String

  challengeWords  ChallengeWord[]
  userWords       UserWord[]
  userScores      UserScore[]
}

model ChallengeWord{
  id           String     @id @default(uuid())
  word         String
  challenge    Challenge  @relation(fields: [challenge_id], references: [id])
  challenge_id  String

  @@unique([challenge_id, word])

}

model UserWord{
  id           String     @id @default(uuid())
  word         String
  foundAt      DateTime   @default(now())
  challenge    Challenge  @relation(fields: [challenge_id], references: [id])
  challenge_id  String

  user         User       @relation(fields: [user_id], references: [id])
  user_id      String

  @@unique([challenge_id, word, user_id])
}

model UserScore {
  id           String     @id @default(uuid())
  score        Int        @default(0)
  lastUpdated  DateTime   @default(now())

  challenge    Challenge  @relation(fields: [challenge_id], references: [id])
  challenge_id String

  user         User       @relation(fields: [user_id], references: [id])
  user_id      String

  @@unique([user_id, challenge_id], name: "user_id_challenge_id")
}
