services:
  db:
    image: postgres:16
    container_name: postgresql_container
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - spellingbee-network
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    build: .
    container_name: migrations
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    environment:
      DATABASE_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}'
    command: ['sh', '-c', 'npx prisma migrate deploy']
    networks:
      - spellingbee-network

  app:
    build: .
    container_name: back_container
    depends_on:
      migrations:
        condition: service_completed_successfully
    ports:
      - '4000:4000'
    env_file: .env
    environment:
      GOOGLE_GEOCODING_API_KEY: ${GOOGLE_GEOCODING_API_KEY}
      DATABASE_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}'
    volumes:
      - .:/app
    command: ['sh', '-c', 'npx prisma generate && npm run dev']
    networks:
      - spellingbee-network

  adminer:
    image: adminer
    container_name: adminer8080_container
    restart: always
    depends_on:
      - db
    ports:
      - '8080:8080'
    networks:
      - spellingbee-network

volumes:
  pgdata:

networks:
  spellingbee-network:
    driver: bridge
